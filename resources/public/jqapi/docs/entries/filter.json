{"name":"filter","type":"method","title":".filter()","desc":"Reduce the set of matched elements to those that match the selector or pass the function's test. ","categories":["traversing/filtering","version/1.0","version/1.4"],"entries":[{"return":"jQuery","signatures":[{"added":"1.0","argument":{"desc":"A string containing a selector expression to match the current set of elements against.","name":"selector","type":"Selector"}},{"added":"1.0","argument":{"desc":"A function used as a test for each element in the set. <code>this</code> is the current DOM element.","name":"function(index)","type":"Function"}},{"added":"1.4","argument":{"desc":"An element to match the current set of elements against.","name":"element","type":"Element"}},{"added":"1.4","argument":{"desc":"An existing jQuery object to match the current set of elements against.","name":"jQuery object","type":"Object"}}],"examples":[{"desc":"Change the color of all divs; then add a border to those with a \"middle\" class.","code":"\n\n    $(\"div\").css(\"background\", \"#c8ebcc\")\n            .filter(\".middle\")\n            .css(\"border-color\", \"red\");\n","css":"\n  div { width:60px; height:60px; margin:5px; float:left;\n        border:2px white solid;}\n  ","html":"<div></div>\n\n  <div class=\"middle\"></div>\n  <div class=\"middle\"></div>\n  <div class=\"middle\"></div>\n  <div class=\"middle\"></div>\n\n  <div></div>"},{"desc":"Change the color of all divs; then add a border to the second one (index == 1) and the div with an id of \"fourth.\"","code":"\n    $(\"div\").css(\"background\", \"#b4b0da\")\n            .filter(function (index) {\n                  return index == 1 || $(this).attr(\"id\") == \"fourth\";\n                })\n            .css(\"border\", \"3px double red\");\n\n","css":"\n  div { width:60px; height:60px; margin:5px; float:left;\n        border:3px white solid; }\n  ","html":"\n  <div id=\"first\"></div>\n  <div id=\"second\"></div>\n  <div id=\"third\"></div>\n\n  <div id=\"fourth\"></div>\n  <div id=\"fifth\"></div>\n  <div id=\"sixth\"></div>"},{"desc":"Select all divs and filter the selection with a DOM element, keeping only the one with an id of \"unique\".","code":"$(\"div\").filter( document.getElementById(\"unique\") )"},{"desc":"Select all divs and filter the selection with a jQuery object, keeping only the one with an id of \"unique\".","code":"\n$(\"div\").filter( $(\"#unique\") )"}],"longdesc":"<p>Given a jQuery object that represents a set of DOM elements, the <code>.filter()</code> method constructs a new jQuery object from a subset of the matching elements. The supplied selector is tested against each element; all elements matching the selector will be included in the result.</p><p>Consider a page with a simple list on it:</p>\n<pre><code>\n&lt;ul&gt;\n  &lt;li&gt;list item 1&lt;/li&gt;\n  &lt;li&gt;list item 2&lt;/li&gt;\n  &lt;li&gt;list item 3&lt;/li&gt;\n  &lt;li&gt;list item 4&lt;/li&gt;\n  &lt;li&gt;list item 5&lt;/li&gt;\n  &lt;li&gt;list item 6&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n<p>We can apply this method to the set of list items:</p>\n<pre><code>\n  $('li').filter(':even').css('background-color', 'red');\n</code></pre>\n<p>The result of this call is a red background for items 1, 3, and 5, as they match the selector (recall that <code>:even</code> and <code>:odd</code> use 0-based indexing).</p>\n<h4 id=\"using-filter-function\">Using a Filter Function</h4>\n<p>The second form of this method allows us to filter elements against a function rather than a selector. For each element, if the function returns <code>true</code> (or a \"truthy\" value), the element will be included in the filtered set; otherwise, it will be excluded. Suppose we have a somewhat more involved HTML snippet:</p>\n<pre><code>\n&lt;ul&gt;\n  &lt;li&gt;&lt;strong&gt;list&lt;/strong&gt; item 1 -\n    one strong tag&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;list&lt;/strong&gt; item &lt;strong&gt;2&lt;/strong&gt; -\n    two &lt;span&gt;strong tags&lt;/span&gt;&lt;/li&gt;\n  &lt;li&gt;list item 3&lt;/li&gt;\n  &lt;li&gt;list item 4&lt;/li&gt;\n  &lt;li&gt;list item 5&lt;/li&gt;\n  &lt;li&gt;list item 6&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n<p>We can select the list items, then filter them based on their contents:</p>\n<pre><code>\n$('li').filter(function(index) {\n  return $('strong', this).length == 1;\n}).css('background-color', 'red');\n</code></pre>\n<p>This code will alter the first list item only, as it contains exactly one <code>&lt;strong&gt;</code> tag. Within the filter function, <code>this</code> refers to each DOM element in turn. The parameter passed to the function tells us the index of that DOM element within the set matched by the jQuery object.</p>\n<p>We can also take advantage of the <code>index</code> passed through the function, which indicates the 0-based position of the element within the unfiltered set of matched elements:</p>\n<pre><code>\n$('li').filter(function(index) {\n  return index % 3 == 2;\n}).css('background-color', 'red');\n</code></pre>\n<p>This alteration to the code will cause the third and sixth list items to be highlighted, as it uses the modulus operator (<code>%</code>) to select every item with an <code>index</code> value that, when divided by 3, has a remainder of <code>2</code>.</p>\n"}]}