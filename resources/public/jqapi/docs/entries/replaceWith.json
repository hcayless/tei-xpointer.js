{"name":"replaceWith","type":"method","title":".replaceWith()","desc":"Replace each element in the set of matched elements with the provided new content and return the set of elements that was removed.","categories":["manipulation/dom-replacement","version/1.2","version/1.4"],"entries":[{"return":"jQuery","signatures":[{"added":"1.2","argument":{"desc":"The content to insert. May be an HTML string, DOM element, or jQuery object.","name":"newContent","type":"String, Element, jQuery"}},{"added":"1.4","argument":{"desc":"A function that returns content with which to replace the set of matched elements.","name":"function","type":"Function"}}],"examples":[{"desc":"On click, replace the button with a div containing the same word.","code":"\n$(\"button\").click(function () {\n  $(this).replaceWith( \"<div>\" + $(this).text() + \"</div>\" );\n});\n","css":"\n  button { display:block; margin:3px; color:red; width:200px; }\n  div { color:red; border:2px solid blue; width:200px;\n      margin:3px; text-align:center; }\n  ","html":"\n<button>First</button>\n<button>Second</button>\n<button>Third</button>\n"},{"desc":"Replace all paragraphs with bold words.","code":"\n$(\"p\").replaceWith( \"<b>Paragraph. </b>\" );\n","html":"\n<p>Hello</p>\n<p>cruel</p>\n<p>World</p>\n"},{"desc":"On click, replace each paragraph with a div that is already in the DOM and selected with the <code>$()</code> function. Notice it doesn't clone the object but rather moves it to replace the paragraph.","code":"\n$(\"p\").click(function () {\n  $(this).replaceWith( $(\"div\") );\n});\n","css":"\n  div { border:2px solid blue; color:red; margin:3px; }\n  p { border:2px solid red; color:blue; margin:3px; cursor:pointer; }\n  ","html":"\n  <p>Hello</p>\n  <p>cruel</p>\n  <p>World</p>\n\n  <div>Replaced!</div>\n"},{"desc":"On button click, replace the containing div with its child divs and append the class name of the selected element to the paragraph.","code":"\n$('button').bind(\"click\", function() {\n  var $container = $(\"div.container\").replaceWith(function() {\n    return $(this).contents();\n  });\n\n  $(\"p\").append( $container.attr(\"class\") );\n});\n","css":"\n  .container { background-color: #991; }\n  .inner { color: #911; }\n  ","html":"\n<p>\n  <button>Replace!</button>\n</p>\n<div class=\"container\">\n  <div class=\"inner\">Scooby</div>\n  <div class=\"inner\">Dooby</div>\n  <div class=\"inner\">Doo</div>\n</div>\n"}],"longdesc":"\n    <p>The <code>.replaceWith()</code> method removes content from the DOM and inserts new content in its place with a single call. Consider this DOM structure:</p>\n    <pre><code>&lt;div class=\"container\"&gt;\n  &lt;div class=\"inner first\"&gt;Hello&lt;/div&gt;\n  &lt;div class=\"inner second\"&gt;And&lt;/div&gt;\n  &lt;div class=\"inner third\"&gt;Goodbye&lt;/div&gt;\n&lt;/div&gt;</code></pre>\n    <p>The second inner <code>&lt;div&gt;</code> could be replaced with the specified HTML:</p>\n    <pre><code>$('div.second').replaceWith('&lt;h2&gt;New heading&lt;/h2&gt;');</code></pre>\n    <p>This results in the structure:</p>\n    <pre><code>&lt;div class=\"container\"&gt;\n  &lt;div class=\"inner first\"&gt;Hello&lt;/div&gt;\n  &lt;h2&gt;New heading&lt;/h2&gt;\n  &lt;div class=\"inner third\"&gt;Goodbye&lt;/div&gt;\n&lt;/div&gt;</code></pre>\n    <p><em>All</em> inner <code>&lt;div&gt;</code> elements could be targeted at once:</p>\n    <pre><code>$('div.inner').replaceWith('&lt;h2&gt;New heading&lt;/h2&gt;');</code></pre>\n    <p>This causes all of them to be replaced:</p>\n    <pre><code>&lt;div class=\"container\"&gt;\n  &lt;h2&gt;New heading&lt;/h2&gt;\n  &lt;h2&gt;New heading&lt;/h2&gt;\n  &lt;h2&gt;New heading&lt;/h2&gt;\n&lt;/div&gt;</code></pre>\n    <p>An element could also be selected as the replacement:</p>\n    <pre><code>$('div.third').replaceWith($('.first'));</code></pre>\n    <p>This results in the DOM structure:</p>\n    <pre><code>&lt;div class=\"container\"&gt;\n  &lt;div class=\"inner second\"&gt;And&lt;/div&gt;\n  &lt;div class=\"inner first\"&gt;Hello&lt;/div&gt;\n&lt;/div&gt;</code></pre>\n    <p>This example demonstrates that the selected element replaces the target by being moved from its old location, not by being cloned.</p>\n    <p>The <code>.replaceWith()</code> method, like most jQuery methods, returns the jQuery object so that other methods can be chained onto it. However, it must be noted that the <em>original</em> jQuery object is returned. This object refers to the element that has been removed from the DOM, not the new element that has replaced it.</p>\n    <p>As of jQuery 1.4, <code>.replaceWith()</code> can also work on disconnected DOM nodes. For example, with the following code, <code>.replaceWith()</code> returns a jQuery set containing only a paragraph.:</p>\n    <pre><code>$(\"&lt;div/&gt;\").replaceWith(\"&lt;p&gt;&lt;/p&gt;\");</code></pre>\n    <p>The <code>.replaceWith()</code> method can also take a function as its argument:</p>\n    <pre><code>$('div.container').replaceWith(function() {\n  return $(this).contents();\n});</code></pre>\n    <p>This results in <code>&lt;div class=\"container\"&gt;</code> being replaced by its three child <code>&lt;div&gt;</code>s. The return value of the function may be an HTML string, DOM element, or jQuery object.</p>\n  "}]}