{"name":"undelegate","type":"method","title":".undelegate()","desc":"Remove a handler from the event for all elements which match the current selector, based upon a specific set of root elements.","categories":["events/event-handler-attachment","version/1.4.2","version/1.4.3","version/1.6"],"entries":[{"return":"jQuery","signatures":[{"added":"1.4.2"},{"added":"1.4.2","argument":[{"desc":"A selector which will be used to filter the event results.","name":"selector","type":"String"},{"desc":"A string containing a JavaScript event type, such as \"click\" or \"keydown\"","name":"eventType","type":"String"}]},{"added":"1.4.2","argument":[{"desc":"A selector which will be used to filter the event results.","name":"selector","type":"String"},{"desc":"A string containing a JavaScript event type, such as \"click\" or \"keydown\"","name":"eventType","type":"String"},{"desc":"A function to execute at the time the event is triggered.","name":"handler(eventObject)","type":"Function"}]},{"added":"1.4.3","argument":[{"desc":"A selector which will be used to filter the event results.","name":"selector","type":"String"},{"desc":"An object of one or more event types and previously bound functions to unbind from them.","name":"events","type":"PlainObject"}]},{"added":"1.6","argument":{"desc":"A string containing a namespace to unbind all events from.","name":"namespace","type":"String"}}],"examples":[{"desc":"Can bind and unbind events to the colored button.","code":"\nfunction aClick() {\n  $(\"div\").show().fadeOut(\"slow\");\n}\n$(\"#bind\").click(function () {\n  $(\"body\").delegate(\"#theone\", \"click\", aClick)\n    .find(\"#theone\").text(\"Can Click!\");\n});\n$(\"#unbind\").click(function () {\n  $(\"body\").undelegate(\"#theone\", \"click\", aClick)\n    .find(\"#theone\").text(\"Does nothing...\");\n});\n","css":"\nbutton { margin:5px; }\nbutton#theone { color:red; background:yellow; }\n","html":"<button id=\"theone\">Does nothing...</button>\n<button id=\"bind\">Bind Click</button>\n<button id=\"unbind\">Unbind Click</button>\n<div style=\"display:none;\">Click!</div>"},{"desc":"To unbind all delegated events from all paragraphs, write:","code":"$(\"p\").undelegate()"},{"desc":"To unbind all delegated click events from all paragraphs, write:","code":"$(\"p\").undelegate( \"click\" )"},{"desc":"To undelegate just one previously bound handler, pass the function in as the third argument:","code":"var foo = function () {\n  // code to handle some kind of event\n};\n\n// ... now foo will be called when paragraphs are clicked ...\n$(\"body\").delegate(\"p\", \"click\", foo);\n\n\n// ... foo will no longer be called.\n$(\"body\").undelegate(\"p\", \"click\", foo); "},{"desc":"To unbind all delegated events by their namespace:","code":"var foo = function () {\n  // code to handle some kind of event\n};\n\n// delegate events under the \".whatever\" namespace\n$(\"form\").delegate(\":button\", \"click.whatever\", foo);\n\n$(\"form\").delegate(\"input[type='text']\", \"keypress.whatever\", foo);\n\n// unbind all events delegated under the \".whatever\" namespace\n\n$(\"form\").undelegate(\".whatever\");"}],"longdesc":"\n    <p>The <code>.undelegate()</code> method is a way of removing event handlers that have been bound using <a href=\"/delegate\"><code>.delegate()</code></a>. <strong>As of jQuery 1.7</strong>, the <a href=\"http://api.jquery.com/on\"><code>.on()</code></a> and <a href=\"http://api.jquery.com/off\"><code>.off()</code></a> methods are preferred for attaching and removing event handlers.</p>\n  "}]}