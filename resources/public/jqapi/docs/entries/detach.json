{"name":"detach","type":"method","title":".detach()","desc":"Remove the set of matched elements from the DOM.","categories":["manipulation/dom-removal","version/1.4"],"entries":[{"return":"jQuery","signatures":{"added":"1.4","argument":{"desc":"A selector expression that filters the set of matched elements to be removed.","name":"selector","optional":"true","type":"Selector"}},"examples":{"desc":"Detach all paragraphs from the DOM","code":"\n    $(\"p\").click(function(){\n      $(this).toggleClass(\"off\");\n    });\n    var p;\n    $(\"button\").click(function(){\n      if ( p ) {\n        p.appendTo(\"body\");\n        p = null;\n      } else {\n        p = $(\"p\").detach();\n      }\n    });","css":"p { background:yellow; margin:6px 0; } p.off { background: black; }","html":"<p>Hello</p>\n  how are\n  <p>you?</p>\n  <button>Attach/detach paragraphs</button>"},"longdesc":"\n    <p>The <code>.detach()</code> method is the same as <code><a href=\"/remove\">.remove()</a></code>, except that <code>.detach()</code> keeps all jQuery data associated with the removed elements. This method is useful when removed elements are to be reinserted into the DOM at a later time.</p>\n  "}]}