{"name":"slideToggle","type":"method","title":".slideToggle()","desc":"Display or hide the matched elements with a sliding motion.","categories":["effects/sliding","version/1.0","version/1.4.3"],"entries":[{"return":"jQuery","signatures":[{"added":"1.0","xi:include":[{"href":"../includes/duration-argument.xml","xmlns:xi":"http://www.w3.org/2003/XInclude"},{"href":"../includes/complete-argument.xml","xmlns:xi":"http://www.w3.org/2003/XInclude"}]},{"added":"1.0","xi:include":{"href":"../includes/options-argument.xml","xmlns:xi":"http://www.w3.org/2003/XInclude"}},{"added":"1.4.3","xi:include":[{"href":"../includes/duration-argument.xml","xmlns:xi":"http://www.w3.org/2003/XInclude"},{"href":"../includes/easing-argument.xml","xmlns:xi":"http://www.w3.org/2003/XInclude"},{"href":"../includes/complete-argument.xml","xmlns:xi":"http://www.w3.org/2003/XInclude"}]}],"examples":[{"desc":"Animates all paragraphs to slide up or down, completing the animation within 600 milliseconds.","code":"\n    $(\"button\").click(function () {\n      $(\"p\").slideToggle(\"slow\");\n    });\n","css":"\n  p { width:400px; }\n  ","html":"<button>Toggle</button>\n\n  <p>\n    This is the paragraph to end all paragraphs.  You\n    should feel <em>lucky</em> to have seen such a paragraph in\n    your life.  Congratulations!\n  </p>"},{"desc":"Animates divs between dividers with a toggle that makes some appear and some disappear.","code":"\n  $(\"#aa\").click(function () {\n    $(\"div:not(.still)\").slideToggle(\"slow\", function () {\n      var n = parseInt($(\"span\").text(), 10);\n      $(\"span\").text(n + 1);\n    });\n  });\n\n","css":"\n  div { background:#b977d1; margin:3px; width:60px;\n        height:60px; float:left; }\n  div.still { background:#345; width:5px; }\n  div.hider { display:none; }\n  span { color:red; }\n  p { clear: left; }","html":"<div></div>\n<div class=\"still\"></div>\n<div style=\"display:none;\">\n</div><div class=\"still\"></div>\n<div></div>\n<div class=\"still\"></div>\n<div class=\"hider\"></div>\n<div class=\"still\"></div>\n<div class=\"hider\"></div>\n<div class=\"still\"></div>\n<div></div>\n<p><button id=\"aa\">Toggle</button> There have been <span>0</span> toggled divs.</p>"}],"longdesc":"\n    <p>The <code>.slideToggle()</code> method animates the height of the matched elements. This causes lower parts of the page to slide up or down, appearing to reveal or conceal the items. If the element is initially displayed, it will be hidden; if hidden, it will be shown. The <code>display</code> property is saved and restored as needed. If an element has a <code>display</code> value of <code>inline</code>, then is hidden and shown, it will once again be displayed <code>inline</code>. When the height reaches 0 after a hiding animation, the <code>display</code> style property is set to <code>none</code> to ensure that the element no longer affects the layout of the page.</p>\n    <p>Durations are given in milliseconds; higher values indicate slower animations, not faster ones. The strings <code>'fast'</code> and <code>'slow'</code> can be supplied to indicate durations of <code>200</code> and <code>600</code> milliseconds, respectively.</p>\n    <p>We can animate any element, such as a simple image:</p>\n    <pre><code>&lt;div id=\"clickme\"&gt;\n  Click here\n&lt;/div&gt;\n&lt;img id=\"book\" src=\"book.png\" alt=\"\" width=\"100\" height=\"123\" /&gt;</code></pre>\n    <p>We will cause <code>.slideToggle()</code> to be called when another element is clicked:</p>\n    <pre><code>$('#clickme').click(function() {\n  $('#book').slideToggle('slow', function() {\n    // Animation complete.\n  });\n});</code>\n</pre>\n    <p>With the element initially shown, we can hide it slowly with the first click:</p>\n    <p class=\"image four-across\">\n      <img src=\"/resources/0042_06_25.png\" alt=\"\"/>\n      <img src=\"/resources/0042_06_26.png\" alt=\"\"/>\n      <img src=\"/resources/0042_06_27.png\" alt=\"\"/>\n      <img src=\"/resources/0042_06_28.png\" alt=\"\"/>\n    </p>\n    <p>A second click will show the element once again:</p>\n    <p class=\"image four-across\">\n      <img src=\"/resources/0042_06_29.png\" alt=\"\"/>\n      <img src=\"/resources/0042_06_30.png\" alt=\"\"/>\n      <img src=\"/resources/0042_06_31.png\" alt=\"\"/>\n      <img src=\"/resources/0042_06_32.png\" alt=\"\"/>\n    </p>\n    <h4 id=\"easing\">Easing</h4>\n    <p><strong>As of jQuery 1.4.3</strong>, an optional string naming an easing function may be used. Easing functions specify the speed at which the animation progresses at different points within the animation. The only easing implementations in the jQuery library are the default, called <code>swing</code>, and one that progresses at a constant pace, called <code>linear</code>. More easing functions are available with the use of plug-ins, most notably the <a href=\"http://jqueryui.com\">jQuery UI suite</a>.</p>\n    <h4 id=\"callback-function\">Callback Function</h4>\n    <p>If supplied, the callback is fired once the animation is complete. This can be useful for stringing different animations together in sequence. The callback is not sent any arguments, but <code>this</code> is set to the DOM element being animated. If multiple elements are animated, it is important to note that the callback is executed once per matched element, not once for the animation as a whole.</p>\n    <p><strong>As of jQuery 1.6</strong>, the <code><a href=\"http://api.jquery.com/promise/\">.promise()</a></code> method can be used in conjunction with the <code><a href=\"http://api.jquery.com/deferred.done/\">deferred.done()</a></code> method to execute a single callback for the animation as a whole when <em>all</em> matching elements have completed their animations ( See the <a href=\"http://api.jquery.com/promise/#example-1\">example for .promise()</a> ).  </p>\n  "}]}