{"name":"serialize","type":"method","title":".serialize()","desc":"Encode a set of form elements as a string for submission.","categories":["forms","ajax/helper-functions","version/1.0"],"entries":[{"return":"String","signatures":{"added":"1.0"},"examples":{"desc":"Serialize a form to a query string, that could be sent to a server in an Ajax request.","code":"\n    function showValues() {\n      var str = $(\"form\").serialize();\n      $(\"#results\").text(str);\n    }\n    $(\":checkbox, :radio\").click(showValues);\n    $(\"select\").change(showValues);\n    showValues();\n","css":"\n  body, select { font-size:12px; }\n  form { margin:5px; }\n  p { color:red; margin:5px; font-size:14px; }\n  b { color:blue; }\n  ","height":"200","html":"\n\n<form>\n  <select name=\"single\">\n    <option>Single</option>\n    <option>Single2</option>\n  </select>\n\n  <br />\n  <select name=\"multiple\" multiple=\"multiple\">\n    <option selected=\"selected\">Multiple</option>\n    <option>Multiple2</option>\n\n    <option selected=\"selected\">Multiple3</option>\n  </select>\n  <br/>\n  <input type=\"checkbox\" name=\"check\" value=\"check1\" id=\"ch1\"/>\n\n  <label for=\"ch1\">check1</label>\n\n  <input type=\"checkbox\" name=\"check\" value=\"check2\" checked=\"checked\" id=\"ch2\"/>\n\n  <label for=\"ch2\">check2</label>\n  <br />\n  <input type=\"radio\" name=\"radio\" value=\"radio1\" checked=\"checked\" id=\"r1\"/>\n\n  <label for=\"r1\">radio1</label>\n  <input type=\"radio\" name=\"radio\" value=\"radio2\" id=\"r2\"/>\n\n  <label for=\"r2\">radio2</label>\n</form>\n<p><tt id=\"results\"></tt></p>"},"longdesc":"\n    <p>The <code>.serialize()</code> method creates a text string in standard URL-encoded notation. It operates on a jQuery object representing a set of form elements. The form elements can be of several types:</p>\n    <pre><code>&lt;form&gt;\n  &lt;div&gt;&lt;input type=\"text\" name=\"a\" value=\"1\" id=\"a\" /&gt;&lt;/div&gt;\n  &lt;div&gt;&lt;input type=\"text\" name=\"b\" value=\"2\" id=\"b\" /&gt;&lt;/div&gt;\n  &lt;div&gt;&lt;input type=\"hidden\" name=\"c\" value=\"3\" id=\"c\" /&gt;&lt;/div&gt;\n  &lt;div&gt;\n    &lt;textarea name=\"d\" rows=\"8\" cols=\"40\"&gt;4&lt;/textarea&gt;\n  &lt;/div&gt;\n  &lt;div&gt;&lt;select name=\"e\"&gt;\n    &lt;option value=\"5\" selected=\"selected\"&gt;5&lt;/option&gt;\n    &lt;option value=\"6\"&gt;6&lt;/option&gt;\n    &lt;option value=\"7\"&gt;7&lt;/option&gt;\n  &lt;/select&gt;&lt;/div&gt;\n  &lt;div&gt;\n    &lt;input type=\"checkbox\" name=\"f\" value=\"8\" id=\"f\" /&gt;\n  &lt;/div&gt;\n  &lt;div&gt;\n    &lt;input type=\"submit\" name=\"g\" value=\"Submit\" id=\"g\" /&gt;\n  &lt;/div&gt;\n&lt;/form&gt;</code></pre>\n    <p>The <code>.serialize()</code> method can act on a jQuery object that has selected individual form elements, such as <code>&lt;input&gt;</code>, <code>&lt;textarea&gt;</code>, and <code>&lt;select&gt;</code>. However, it is typically easier to select the <code>&lt;form&gt;</code> tag itself for serialization:</p>\n    <pre><code>$('form').submit(function() {\n  alert($(this).serialize());\n  return false;\n});</code></pre>\n    <p>This produces a standard-looking query string:</p>\n    <pre><code>a=1&amp;b=2&amp;c=3&amp;d=4&amp;e=5</code></pre>\n    <p><strong>Warning:</strong> selecting both the form and its children will cause duplicates in the serialized string.</p>\n    <p>Note: Only <a href=\"http://www.w3.org/TR/html401/interact/forms.html#h-17.13.2\">\"successful controls\"</a> are serialized to the string. No submit button value is serialized since the form was not submitted using a button. For a form element's value to be included in the serialized string, the element must have a <code>name</code> attribute. Values from checkboxes and radio buttons (<code>input</code>s of type \"radio\" or \"checkbox\") are included only if they are checked. Data from file select elements is not serialized.</p>\n  "}]}