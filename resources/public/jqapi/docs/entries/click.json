{"name":"click","type":"method","title":".click()","desc":"Bind an event handler to the \"click\" JavaScript event, or trigger that event on an element.","categories":["events/mouse-events","version/1.0","version/1.4.3"],"entries":[{"return":"jQuery","signatures":[{"added":"1.0","argument":{"desc":"A function to execute each time the event is triggered.","name":"handler(eventObject)","type":"Function"}},{"added":"1.4.3","argument":[{"desc":"An object containing data that will be passed to the event handler.","name":"eventData","type":"Object","optional":"true"},{"desc":"A function to execute each time the event is triggered.","name":"handler(eventObject)","type":"Function"}]},{"added":"1.0"}],"examples":[{"desc":"Hide paragraphs on a page when they are clicked:","code":"\n    $(\"p\").click(function () {\n      $(this).slideUp();\n    });\n","css":"\n  p { color:red; margin:5px; cursor:pointer; }\n  p:hover { background:yellow; }\n  ","html":"<p>First Paragraph</p>\n\n  <p>Second Paragraph</p>\n  <p>Yet one more Paragraph</p>"},{"desc":"Trigger the click event on all of the paragraphs on the page:","code":"$(\"p\").click();"}],"longdesc":"\n    <p>In the first two variations, this method is a shortcut for <code>.bind(\"click\", handler)</code>, as well as for <code>.on(\"click\", handler)</code> as of jQuery 1.7. In the third variation, when <code>.click()</code> is called without arguments, it is a shortcut for <code>.trigger(\"click\")</code>. </p>\n    <p>The <code>click</code> event is sent to an element when the mouse pointer is over the element, and the mouse button is pressed and released. Any HTML element can receive this event.</p>\n    <pre><code>For example, consider the HTML:\n&lt;div id=\"target\"&gt;\n  Click here\n&lt;/div&gt;\n&lt;div id=\"other\"&gt;\n  Trigger the handler\n&lt;/div&gt;</code></pre>\n    <p class=\"image\">\n      <img src=\"/resources/0042_05_03.png\" alt=\"\"/>\n    </p>\n    <p>The event handler can be bound to any <code>&lt;div&gt;</code>:</p>\n    <pre><code>$(\"#target\").click(function() {\n  alert(\"Handler for .click() called.\");\n});</code></pre>\n    <p>Now if we click on this element, the alert is displayed:</p>\n    <p>\n      <span class=\"output\">Handler for .click() called.</span>\n    </p>\n    <p>We can also trigger the event when a different element is clicked:</p>\n    <pre><code>$(\"#other\").click(function() {\n  $(\"#target\").click();\n});</code></pre>\n    <p>After this code executes, clicks on <span class=\"output\">Trigger the handler</span> will also alert the message.</p>\n    <p>The <code>click</code> event is only triggered after this exact series of events:</p>\n    <ul>\n      <li>The mouse button is depressed while the pointer is inside the element.</li>\n      <li>The mouse button is released while the pointer is inside the element.</li>\n    </ul>\n    <p>This is usually the desired sequence before taking an action. If this is not required, the <code>mousedown</code> or <code>mouseup</code> event may be more suitable.</p>\n  "}]}