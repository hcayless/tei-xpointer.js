{"name":"ajaxError","type":"method","title":".ajaxError()","desc":"Register a handler to be called when Ajax requests complete with an error. This is an <ahref=\"/Ajax_Events\">Ajax Event</a>.","categories":["ajax/global-ajax-event-handlers","version/1.0"],"entries":[{"return":"jQuery","signatures":{"added":"1.0","argument":{"desc":"The function to be invoked.","name":"handler(event, jqXHR, ajaxSettings, thrownError)","type":"Function"}},"examples":{"desc":"Show a message when an Ajax request fails.","code":"$(document).ajaxError(function(event, request, settings) {\n  $( \"#msg\" ).append( \"<li>Error requesting page \" + settings.url + \"</li>\" );\n});"},"longdesc":"\n    <p>Whenever an Ajax request completes with an error, jQuery triggers the <code>ajaxError</code> event. Any and all handlers that have been registered with the <code>.ajaxError()</code> method are executed at this time.</p>\n    <p>To observe this method in action, set up a basic Ajax load request.</p>\n    <pre><code>&lt;button class=\"trigger\"&gt;Trigger&lt;/button&gt;\n&lt;div class=\"result\"&gt;&lt;/div&gt;\n&lt;div class=\"log\"&gt;&lt;/div&gt;</code></pre>\n    <p>Attach the event handler to the document:</p>\n    <pre><code>$(document).ajaxError(function() {\n  $( \"div.log\" ).text( \"Triggered ajaxError handler.\" );\n});</code></pre>\n    <p>Now, make an Ajax request using any jQuery method:</p>\n    <pre><code>$( \"button.trigger\" ).click(function() {\n  $( \"div.result\" ).load( \"ajax/missing.html\" );\n});</code></pre>\n    <p>When the user clicks the button and the Ajax request fails, because the requested file is missing, the log message is displayed.</p>\n    <p><strong>Note:</strong> Because <code>.ajaxError()</code> is implemented as a method of jQuery object instances, you can use the <code>this</code> keyword within the callback function to refer to the selected elements. <strong>As of jQuery 1.8, however, the <code>.ajaxError()</code> method should only be attached to <code>document</code>.</strong></p>\n    <p>All <code>ajaxError</code> handlers are invoked, regardless of what Ajax request was completed. To differentiate between the requests, use the parameters passed to the handler. Each time an <code>ajaxError</code> handler is executed, it is passed the event object, the <code>jqXHR</code> object (prior to jQuery 1.5, the <code><abbr title=\"XMLHttpRequest\">XHR</abbr></code> object), and the settings object that was used in the creation of the request. If the request failed because JavaScript raised an exception, the exception object is passed to the handler as a fourth parameter. For example, to restrict the error callback to only handling events dealing with a particular URL:</p>\n    <pre><code>$( document ).ajaxError(function(event, jqxhr, settings, exception) {\n  if ( settings.url == \"ajax/missing.html\" ) {\n    $( \"div.log\" ).text( \"Triggered ajaxError handler.\" );\n  }\n});</code></pre>\n  "}]}