{"name":"removeProp","type":"method","title":".removeProp()","desc":"Remove a property for the set of matched elements.","categories":["attributes","manipulation/general-attributes","version/1.6"],"entries":[{"return":"jQuery","signatures":{"added":"1.6","argument":{"desc":"The name of the property to remove.","name":"propertyName","type":"String"}},"examples":{"desc":"Set a numeric property on a paragraph and then remove it. ","code":"\nvar $para = $(\"p\");\n$para.prop(\"luggageCode\", 1234);\n$para.append(\"The secret luggage code is: \", String($para.prop(\"luggageCode\")), \". \");\n$para.removeProp(\"luggageCode\");\n$para.append(\"Now the secret luggage code is: \", String($para.prop(\"luggageCode\")), \". \");\n\n","css":"\n  img { padding:10px; }\n  div { color:red; font-size:24px; }\n","html":"\n  <p></p>\n"},"longdesc":"\n    <p>The <code>.removeProp()</code> method removes properties set by the <code><a href=\"http://api.jquery.com/prop\">.prop()</a></code> method.</p>\n    <p>With some built-in properties of a DOM element or <code>window</code> object, browsers may generate an error if an attempt is made to remove the property. jQuery first assigns the value <code>undefined</code> to the property and ignores any error the browser generates. In general, it is only necessary to remove custom properties that have been set on an object, and not built-in (native) properties.</p>\n    <p><strong>Note:</strong> Do not use this method to remove native properties such as checked, disabled, or selected. This will remove the property completely and, once removed, cannot be added again to element. Use <code><a href=\"http://api.jquery.com/prop\">.prop()</a></code> to set these properties to <code>false</code> instead.</p>\n  "}]}