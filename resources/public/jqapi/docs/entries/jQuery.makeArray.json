{"name":"jQuery.makeArray","type":"method","title":"jQuery.makeArray()","desc":"Convert an array-like object into a true JavaScript array.","categories":["utilities","version/1.2"],"entries":[{"return":"Array","signatures":{"added":"1.2","argument":{"desc":"Any object to turn into a native Array.","name":"obj","type":"PlainObject"}},"examples":[{"desc":"Turn a collection of HTMLElements into an Array of them.","code":"\n    var elems = document.getElementsByTagName(\"div\"); // returns a nodeList\n    var arr = jQuery.makeArray(elems);\n    arr.reverse(); // use an Array method on list of dom elements\n    $(arr).appendTo(document.body);\n","css":"\n  div { color:red; }\n  ","html":"<div>First</div>\n  <div>Second</div>\n  <div>Third</div>\n\n  <div>Fourth</div>"},{"desc":"Turn a jQuery object into an array","code":"\n    var obj = $('li');\n    var arr = $.makeArray(obj);\n","results":"(typeof obj === 'object' && obj.jquery) === true;\njQuery.isArray(arr) === true;"}],"longdesc":"\n    <p>Many methods, both in jQuery and in JavaScript in general, return objects that are array-like. For example, the jQuery factory function <code>$()</code> returns a jQuery object that has many of the properties of an array (a length, the <code>[]</code> array access operator, etc.), but is not exactly the same as an array and lacks some of an array's built-in methods (such as <code>.pop()</code> and <code>.reverse()</code>).</p>\n    <p>Note that after the conversion, any special features the object had (such as the jQuery methods in our example) will no longer be present. The object is now a plain array.</p>\n  "}]}