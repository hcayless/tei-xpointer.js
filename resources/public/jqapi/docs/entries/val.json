{"name":"val","type":"method","title":".val()","desc":"Get the current value of the first element in the set of matched elements or set the value of every matched element.","categories":["attributes","forms","manipulation/general-attributes","version/1.0","version/1.4"],"entries":[{"return":"String, Number, Array","signatures":{"added":"1.0"},"examples":[{"desc":"Get the single value from a single select and an array of values from a multiple select and display their values.","code":"\n    function displayVals() {\n      var singleValues = $(\"#single\").val();\n      var multipleValues = $(\"#multiple\").val() || [];\n      $(\"p\").html(\"<b>Single:</b> \" +\n                  singleValues +\n                  \" <b>Multiple:</b> \" +\n                  multipleValues.join(\", \"));\n    }\n\n    $(\"select\").change(displayVals);\n    displayVals();\n\n","css":"\n  p { color:red; margin:4px; }\n  b { color:blue; }\n  ","html":"<p></p>\n\n  <select id=\"single\">\n    <option>Single</option>\n    <option>Single2</option>\n  </select>\n\n  <select id=\"multiple\" multiple=\"multiple\">\n    <option selected=\"selected\">Multiple</option>\n    <option>Multiple2</option>\n    <option selected=\"selected\">Multiple3</option>\n  </select>\n"},{"desc":"Find the value of an input box.","code":"\n    $(\"input\").keyup(function () {\n      var value = $(this).val();\n      $(\"p\").text(value);\n    }).keyup();\n","css":"\n\n  p { color:blue; margin:8px; }\n  ","html":"<input type=\"text\" value=\"some text\"/>\n  <p></p>"}],"desc":"Get the current value of the first element in the set of matched elements.","longdesc":"\n      <p>The <code>.val()</code> method is primarily used to get the values of form elements such as <code>input</code>, <code>select</code> and <code>textarea</code>. In the case of <code>&lt;select multiple=\"multiple\"&gt;</code> elements, the <code>.val()</code> method returns an array containing each selected option; if no option is selected, it returns <code>null</code>. </p>\n      <p>For selects and checkboxes, you can also use the <a href=\"/selected\">:selected</a> and <a href=\"/checked\">:checked</a> selectors to get at values, for example:</p>\n      <pre><code>$('select.foo option:selected').val();    // get the value from a dropdown select\n$('select.foo').val();                    // get the value from a dropdown select even easier\n$('input:checkbox:checked').val();        // get the value from a checked checkbox\n$('input:radio[name=bar]:checked').val(); // get the value from a set of radio buttons</code></pre>\n      <blockquote>\n        <p><strong>Note: </strong> At present, using <code>.val()</code> on textarea elements strips carriage return characters from the browser-reported value. When this value is sent to the server via XHR however, carriage returns are preserved (or added by browsers which do not include them in the raw value). A workaround for this issue can be achieved using a valHook as follows:</p>\n      </blockquote>\n      <pre><code>\n$.valHooks.textarea = {\n  get: function( elem ) {\n    return elem.value.replace( /\\r?\\n/g, \"\\r\\n\" );\n  }\n};\n</code></pre>\n    "},{"return":"jQuery","signatures":[{"added":"1.0","argument":{"desc":"A string of text or an array of strings corresponding to the value of each matched element to set as selected/checked.","name":"value","type":"String, Array"}},{"added":"1.4","argument":{"desc":"A function returning the value to set. <code>this</code> is the current element. Receives the index position of the element in the set and the old value as arguments.","name":"function(index, value)","type":"Function"}}],"examples":[{"desc":"Set the value of an input box.","code":"\n    $(\"button\").click(function () {\n      var text = $(this).text();\n      $(\"input\").val(text);\n    });\n","css":"\n  button { margin:4px; cursor:pointer; }\n  input { margin:4px; color:blue; }\n  ","html":"<div>\n    <button>Feed</button>\n    <button>the</button>\n    <button>Input</button>\n  </div>\n  <input type=\"text\" value=\"click a button\" />"},{"desc":"Use the function argument to modify the value of an input box.","code":"\n  $('input').bind('blur', function() {\n    $(this).val(function( i, val ) {\n      return val.toUpperCase();\n    });\n  });\n  ","html":"\n  <p>Type something and then click or tab out of the input.</p>\n  <input type=\"text\" value=\"type something\" />\n"},{"desc":"Set a single select, a multiple select, checkboxes and a radio button .","code":"\n\n    $(\"#single\").val(\"Single2\");\n    $(\"#multiple\").val([\"Multiple2\", \"Multiple3\"]);\n    $(\"input\").val([\"check1\",\"check2\", \"radio1\" ]);\n\n","css":"\n  body { color:blue; }\n  ","html":"<select id=\"single\">\n    <option>Single</option>\n    <option>Single2</option>\n  </select>\n\n  <select id=\"multiple\" multiple=\"multiple\">\n    <option selected=\"selected\">Multiple</option>\n    <option>Multiple2</option>\n    <option selected=\"selected\">Multiple3</option>\n  </select><br/>\n  <input type=\"checkbox\" name=\"checkboxname\" value=\"check1\"/> check1\n  <input type=\"checkbox\" name=\"checkboxname\" value=\"check2\"/> check2\n  <input type=\"radio\"  name=\"r\" value=\"radio1\"/> radio1\n  <input type=\"radio\"  name=\"r\" value=\"radio2\"/> radio2"}],"desc":"Set the value of each element in the set of matched elements.","longdesc":"\n      <p>This method is typically used to set the values of form fields. </p>\n      <p>Passing an array of element values allows matching  <code>&lt;input type=\"checkbox\"&gt;</code>, <code>&lt;input type=\"radio\"&gt;</code> and <code>&lt;option&gt;</code>s inside of n <code>&lt;select multiple=\"multiple\"&gt;</code> to be selected. In the case of <code>&lt;input type=\"radio\"&gt;</code>s that are part of a radio group and <code>&lt;select multiple=\"multiple\"&gt;</code> the other elements will be deselected.</p>\n      <p>The <code>.val()</code> method allows us to set the value by passing in a function. As of jQuery 1.4, the function is passed two arguments, the current element's index and its current value: </p>\n      <pre><code>$('input:text.items').val(function( index, value ) {\n  return value + ' ' + this.className;\n});\n</code></pre>\n      <p>This example appends the string \" items\" to the text inputs' values.</p>\n    "}]}